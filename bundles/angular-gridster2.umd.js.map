{
  "version": 3,
  "file": "angular-gridster2.umd.js",
  "sources": [
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridster.module.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterPreview.component.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterItem.component.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterResizable.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterPushResize.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterDraggable.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterPush.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterScroll.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterSwap.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterItemComponent.interface.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridster.component.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterRenderer.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterCompact.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterEmptyCell.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridster.interface.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterUtils.service.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterConfig.constant.ts",
    "ng://angular-gridster2/projects/angular-gridster2/src/lib/gridsterConfig.interface.ts"
  ],
  "sourcesContent": [
    "import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: []\n})\nexport class GridsterModule {\n}\n",
    "import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styles: [`gridster-preview{display:none;background:rgba(0,0,0,.15)}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n",
    "import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  template: `<ng-content></ng-content>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.s || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-s\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.e || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-e\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.n || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-n\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.w || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-w\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.se || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-se\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.ne || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-ne\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.sw || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-sw\"></div>\n<div (mousedown)=\"resize.dragStartDelay($event)\" (touchstart)=\"resize.dragStartDelay($event)\"\n     [hidden]=\"!gridster.$options.resizable.handles.nw || !resize.resizeEnabled\"\n     class=\"gridster-item-resizable-handler handle-nw\"></div>\n`,\n  styles: [`gridster-item{box-sizing:border-box;z-index:1;position:absolute;overflow:hidden;transition:.3s;display:none;background:#fff;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}gridster-item.gridster-item-moving{cursor:move}gridster-item.gridster-item-moving,gridster-item.gridster-item-resizing{transition:0s;z-index:2;box-shadow:0 0 5px 5px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.gridster-item-resizable-handler{position:absolute;z-index:2}.gridster-item-resizable-handler.handle-n{cursor:n-resize;height:10px;right:0;top:0;left:0}.gridster-item-resizable-handler.handle-e{cursor:e-resize;width:10px;bottom:0;right:0;top:0}.gridster-item-resizable-handler.handle-s{cursor:s-resize;height:10px;right:0;bottom:0;left:0}.gridster-item-resizable-handler.handle-w{cursor:w-resize;width:10px;left:0;top:0;bottom:0}.gridster-item-resizable-handler.handle-ne{cursor:ne-resize;width:10px;height:10px;right:0;top:0}.gridster-item-resizable-handler.handle-nw{cursor:nw-resize;width:10px;height:10px;left:0;top:0}.gridster-item-resizable-handler.handle-se{cursor:se-resize;width:0;height:0;right:0;bottom:0;border-style:solid;border-width:0 0 10px 10px;border-color:transparent}.gridster-item-resizable-handler.handle-sw{cursor:sw-resize;width:10px;height:10px;left:0;bottom:0}gridster-item:hover .gridster-item-resizable-handler.handle-se{border-color:transparent transparent #ccc}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2, private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n\t  dragLimit: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  dragLimit(): boolean | string {\n\t  if(this.$item.dragLimit === undefined) return false;\n\t  if(this.$item.dragLimit === \"x\" || this.$item.dragLimit === \"y\") return this.$item.dragLimit;\n\t  return false;\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n",
    "import {Injectable, NgZone} from '@angular/core';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: Function;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: Function;\n  mouseup: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  maxHeight: number;\n  maxWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.maxHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.maxItemRows || this.gridster.$options.maxItemRows)\n      - this.margin;\n    this.maxWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.maxItemCols || this.gridster.$options.maxItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleNW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleNE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleSW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleSE;\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n\tif (this.maxHeight < this.height) {\n      this.height = this.maxHeight;\n      this.top = this.bottom - this.maxHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n\tif (this.maxWidth < this.width) {\n      this.width = this.maxWidth;\n      this.left = this.right - this.maxWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    if (this.maxHeight < this.height) {\n      this.height = this.maxHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n\tif (this.maxWidth < this.width) {\n      this.width = this.maxWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    const transform = 'translate(' + this.left + 'px, ' + top + 'px)';\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'transform', transform);\n  }\n\n  setItemLeft(left: number): void {\n    const transform = 'translate(' + left + 'px, ' + this.top + 'px)';\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'transform', transform);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n",
    "import {Injectable, NgZone} from '@angular/core';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: Function;\n  mouseup: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  mousedown: Function;\n  touchstart: Function;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean;\n  scrollIntoView: any;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n    this.scrollIntoView = this.debounce(() => {\n\t\tthis.gridsterItem.el.scrollIntoView({\n\t\t\tbehavior: \"auto\",\n\t\t\tblock: \"nearest\",\n\t\t\tinline: \"nearest\"\n\t\t});\n\t},50);\n  }\n\n  destroy(): void {\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n\tthis.scrollIntoView();\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.swap.restoreSwapItem();\n    this.push.destroy();\n    delete this.push;\n    this.swap.destroy();\n    delete this.swap;\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision !== true && this.collision !== false && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    delete this.collision;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.swap.setSwapItem();\n    this.push.destroy();\n    delete this.push;\n    this.swap.destroy();\n    delete this.swap;\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    const transform = 'translate(' + this.left + 'px, ' + this.top + 'px)';\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'transform', transform);\n\n    let limit = this.gridsterItem.dragLimit();\n\tlet allow = true;\n    if(limit) {\n\t\tif(limit === \"x\" && this.path[0].y !== this.gridsterItem.$item.y) allow = false;\n\t\tif(limit === \"y\" && this.path[0].x !== this.gridsterItem.$item.x) allow = false;\n\t}\n\t\n\tif(!allow) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n\t} else if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  debounce(func: any, wait: number, immediate?: boolean) {\n    let timeout: any;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el.$item.x === itemCollision.$item.x && el.$item.y === itemCollision.$item.y;\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    let dragLimit = gridsterItemCollide.dragLimit();\n\tif(dragLimit && dragLimit == \"x\") return false;\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    let dragLimit = gridsterItemCollide.dragLimit();\n\tif(dragLimit && dragLimit == \"x\") return false;\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    let dragLimit = gridsterItemCollide.dragLimit();\n\tif(dragLimit && dragLimit == \"y\") return false;\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    let dragLimit = gridsterItemCollide.dragLimit();\n\tif(dragLimit && dragLimit == \"y\") return false;\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n",
    "import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n  if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n    cancelN();\n    if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n      return;\n    }\n    intervalS = startVertical(1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n    cancelS();\n    if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n      return;\n    }\n    intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientY !== e.clientY) {\n    cancelVertical();\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n  if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n    cancelW();\n    if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n      return;\n    }\n    intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n    cancelE();\n    if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n      return;\n    }\n    intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientX !== e.clientX) {\n    cancelHorizontal();\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    const gridsterItemCollision: any = this.gridster.checkCollision(pushedBy.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n      }\n    }\n  }\n}\n",
    "import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  dragLimit: () => boolean | string;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n",
    "import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Component({\n  selector: 'gridster',\n  template: `<div class=\"gridster-column\" *ngFor=\"let column of gridColumns; let i = index;\"\n     [ngStyle]=\"gridRenderer.getGridColumnStyle(i)\"></div>\n<div class=\"gridster-row\" *ngFor=\"let row of gridRows; let i = index;\"\n     [ngStyle]=\"gridRenderer.getGridRowStyle(i)\"></div>\n<ng-content></ng-content>\n<gridster-preview class=\"gridster-preview\"></gridster-preview>\n`,\n  styles: [`gridster{position:relative;box-sizing:border-box;background:grey;width:100%;height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block}gridster.fit{overflow-x:hidden;overflow-y:hidden}gridster.scrollVertical{overflow-x:hidden;overflow-y:auto}gridster.scrollHorizontal{overflow-x:auto;overflow-y:hidden}gridster.fixed{overflow:auto}gridster.mobile{overflow-x:hidden;overflow-y:auto}gridster.mobile gridster-item{position:relative;height:25%}gridster .gridster-column,gridster .gridster-row{position:absolute;display:none;transition:.3s;box-sizing:border-box}gridster.display-grid .gridster-column,gridster.display-grid .gridster-row{display:block}gridster .gridster-column{border-left:1px solid #fff;border-right:1px solid #fff}gridster .gridster-row{border-top:1px solid #fff;border-bottom:1px solid #fff}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(el: ElementRef, public renderer: Renderer2, public cdRef: ChangeDetectorRef, public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    let width = this.el.clientWidth;\n    let height = this.el.clientHeight;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows, columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1, widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0, colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n}\n",
    "import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      renderer.setStyle(el, 'transform', '');\n      renderer.setStyle(el, 'width', '');\n      renderer.setStyle(el, 'height', '');\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      transform: 'translateX(' + this.gridster.curColWidth * i + 'px)',\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      transform: 'translateY(' + this.gridster.curRowHeight * i + 'px)',\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n",
    "import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n",
    "import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\n};\n",
    "import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes = 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up'\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "ElementRef",
    "Component",
    "Injectable",
    "Input",
    "NgZone"
  ],
  "mappings": "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"
}
